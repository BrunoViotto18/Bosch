from textblob.sentiments import NaiveBayesAnalyzer
from textblob import TextBlob
import matplotlib.pyplot as plt
import tweepy as tw
import pandas as pd
import os


API_Key = os.environ['API_Key']
API_Secret_Key = os.environ['API_Secret_Key']
Access_Token = os.environ['Access_Token']
Access_Secret_Token = os.environ['Access_Secret_Token']
Bearer_Token = os.environ['Bearer_Token']

auth = tw.OAuthHandler(API_Key, API_Secret_Key)
auth.set_access_token(Access_Token, Access_Secret_Token)
api = tw.API(auth)

###################################

'''twitter = api.home_timeline()
for tweet in twitter:
  print(tweet.text)'''

'''def obter_tweets(usuario, limite=10):
  resultados = api.user_timeline(screen_name=usuario, count=limite, tweet_mode='extended')
  tweets = []
  for i in resultados:
    tweets.append(i.full_text)
  return tweets

x = obter_tweets('NetflixBrasil')
try:
  arq = open('arquivo.txt', 'rt+')
  for c in x:
    arq.write(f'{c}\n\n')
except Exception:
  print('ERRO!')
finally:
  arq.close()'''

'''for tweet in cursor:
  print(f'{tweet.created_at}')
  print(f'{tweet.text}\n\n')'''

query = '#covid' + '-filter:retweets'
cursor = tw.Cursor(api.search, q=query).items(5)

df = pd.DataFrame(data=[tweet.text if tweet.lang == 'en' else '---' for tweet in cursor], columns=['Tweets'])

pos = neg = 0
for c in df['Tweets'].head(5):
  if c == '---':
    pass
  else:
    analise = TextBlob(c, analyzer=NaiveBayesAnalyzer())
    if analise.sentiment[0] == 'pos':
      pos += 1
    elif analise.sentiment[0] == 'neg':
      neg += 1


valores = [pos, neg]
print(valores)
nlabels= 'Positivo', 'Negativo'
plt.pie(valores, labels=nlabels,autopct='%1.1f%%')
plt.title('Grafico')
plt.show()
